<?xml version="1.0"?>

<project default="all">

    <taskdef resource="cpptasks.tasks"/>
    <typedef resource="cpptasks.types"/>

    <target name="all" depends="settings,javadoc,jars"/>

    <target name="settings">
        <property file="ant.settings"/>
        <fail
            message="Please copy ant.settings.template to ant.settings, and set the variables in it."
            unless="polyglot.loc"
        />
    </target>

    <target name="jars" depends="translator-jar,runtime-jar"/>

    <target name="translator-jar" depends="settings,compile-translator">
        <jar destfile="translator/lib/jedd-translator.jar">
            <fileset dir="translator/classes"/>
        </jar>
    </target>
    
    <target name="runtime-jar" depends="settings,compile-runtime">
        <jar destfile="runtime/lib/jedd-runtime.jar">
            <fileset dir="runtime/classes"/>
        </jar>
    </target>
    
    <target name="compile" depends="compile-translator,compile-runtime"/>

    <target name="javadoc">
        <javadoc
            sourcepath="runtime/src"
            destdir="doc/api"
            windowtitle="Jedd Runtime API"
            verbose="true"
        >
            <fileset dir="runtime/src" includes="jedd/*.java"/>
        </javadoc>
    </target>

    <target name="compile-runtime" depends="settings,compile-c">
        <mkdir dir="runtime/classes"/>
        <javac
            destdir="runtime/classes"
            classpath="runtime/classes:${java.class.path}:${sablejbdd.loc}/classes:${javabdd.loc}/javabdd_0.6.jar"
            debug="true"
        >
            <src path="runtime/src"/>
            <src path="runtime/generated"/>
        </javac>
    </target>

    <target name="compile-c" depends="swig,compile-cudd,compile-buddy"/>

    <target name="compile-cudd" depends="settings,swig,cudd-dep" unless="cudd-uptodate">
        <cc
            name="gcc"
            debug="true"
            objdir="runtime/generated"
            outfile="runtime/lib/jeddcudd"
            link="shared"
            runtime="dynamic"
        >
            <fileset dir="runtime/generated" includes="jcudd_wrap.c"/>
            <fileset dir="runtime/csrc" includes="jcudd.c"/>
            <libset dir="${cudd.loc}/cudd" libs="cudd"/>
            <libset dir="${cudd.loc}/mtr" libs="mtr"/>
            <libset dir="${cudd.loc}/st" libs="st"/>
            <libset dir="${cudd.loc}/util" libs="util"/>
            <libset dir="${cudd.loc}/epd" libs="epd"/>
            <includepath path="${java.loc}/include"/>
            <includepath path="${java.loc}/include/linux"/>
            <includepath path="runtime/csrc"/>
            <includepath path="${cudd.loc}/include"/> 
        </cc>
    </target>
    <target name="cudd-dep" depends="settings">
        <dependset>
            <srcfileset dir="runtime/generated" includes="jcudd_wrap.c"/>
            <srcfileset dir="runtime/csrc" includes="jcudd.c"/>
            <srcfileset dir="${cudd.loc}/cudd" includes="libcudd.a"/>
            <srcfileset dir="${cudd.loc}/mtr" includes="libmtr.a"/>
            <srcfileset dir="${cudd.loc}/st" includes="libst.a"/>
            <srcfileset dir="${cudd.loc}/util" includes="libutil.a"/>
            <srcfileset dir="${cudd.loc}/epd" includes="libepd.a"/>
            <targetfileset dir="runtime/lib" includes="libjeddcudd.so"/>
        </dependset>
        <available property="cudd-uptodate" file="runtime/lib/libjeddcudd.so"/>
    </target>

    <target name="compile-buddy" depends="settings,swig,buddy-dep" unless="buddy-uptodate">
        <cc
            name="gcc"
            debug="true"
            objdir="runtime/generated"
            outfile="runtime/lib/jeddbuddy"
            link="shared"
            runtime="dynamic"
        >
            <compilerarg value="-O3"/>
            <fileset dir="runtime/generated" includes="jbuddy_wrap.c"/>
            <fileset dir="runtime/csrc" includes="jbuddy.c"/>
            <libset dir="${buddy.loc}/src" libs="bdd"/>
            <includepath path="${java.loc}/include"/>
            <includepath path="${java.loc}/include/linux"/>
            <includepath path="runtime/csrc"/>
            <includepath path="${buddy.loc}/src"/> 
        </cc>
    </target>
    <target name="buddy-dep" depends="settings">
        <dependset>
            <srcfileset dir="runtime/generated" includes="jbuddy_wrap.c"/>
            <srcfileset dir="runtime/csrc" includes="jbuddy.c"/>
            <srcfileset dir="${buddy.loc}/src" includes="libbdd.a"/>
            <targetfileset dir="runtime/lib" includes="libjeddbuddy.so"/>
        </dependset>
        <available property="buddy-uptodate" file="runtime/lib/libjeddbuddy.so"/>
    </target>

    <target name="swig" depends="settings,swig-dep" unless="swig-uptodate">
        <exec dir="runtime/generated" executable="${swig.loc}/bin/swig">
            <arg line="-I../csrc -I${swig.loc}/lib/swig1.3 -I${swig.loc}/lib/swig1.3/java -I${cudd.loc}/include -java -package jedd.internal.cudd jcudd.i"/>
        </exec>
        <mkdir dir="runtime/generated/jedd/internal/cudd"/>
        <move todir="runtime/generated/jedd/internal/cudd">
            <fileset dir="runtime/generated" includes="*.java"/>
        </move>
        <exec dir="runtime/generated" executable="${swig.loc}/bin/swig">
            <arg line="-I../csrc -I${swig.loc}/lib/swig1.3 -I${swig.loc}/lib/swig1.3/java -I${buddy.loc}/src -java -package jedd.internal.buddy jbuddy.i"/>
        </exec>
        <mkdir dir="runtime/generated/jedd/internal/buddy"/>
        <move todir="runtime/generated/jedd/internal/buddy">
            <fileset dir="runtime/generated" includes="*.java"/>
        </move>
    </target>
    <target name="swig-dep" depends="settings">
        <dependset>
            <srcfileset dir="runtime/csrc" includes="*.c,*.h,*.i"/>
            <targetfileset dir="runtime/generated"
                includes="**/*.java,*.c"/>
        </dependset>
        <condition property="swig-uptodate">
            <and>
                <available file="runtime/generated/jedd/internal/buddy/Buddy.java"/>
                <available file="runtime/generated/jedd/internal/buddy/BuddyJNI.java"/>
                <available file="runtime/generated/jbuddy_wrap.c"/>
                <available file="runtime/generated/jedd/internal/cudd/Cudd.java"/>
                <available file="runtime/generated/jedd/internal/cudd/CuddJNI.java"/>
                <available file="runtime/generated/jcudd_wrap.c"/>
            </and>
        </condition>
    </target>

    <target name="compile-translator" depends="settings,flex-translator,cup-translator">
        <mkdir dir="translator/classes"/>
        <javac
            destdir="translator/classes"
            debug="true"
        >
            <src path="translator/src"/>
            <src path="translator/generated"/>
            <classpath>
                <pathelement location="translator/classes"/>
                <pathelement location="${polyglot.loc}"/>
                <pathelement location="${soot.loc}"/>
                <pathelement location="${jasmin.loc}"/>
            </classpath>
        </javac>
    </target>

    <target name="flex-translator" depends="settings,jflex-dep" unless="jflex-up-to-date">
        <mkdir dir="translator/generated/polyglot/ext/jedd/parse"/>
        <java classname="JFlex.Main"
            fork="true"
            dir="."
            failonerror="true"
        >
            <classpath>
                <pathelement location="${jflex.loc}"/>
            </classpath>
            <arg line="-d translator/generated/polyglot/ext/jedd/parse translator/src/polyglot/ext/jedd/parse/jedd.flex"/>
        </java>
        <!-- Get rid of timestamps -->
        <replaceregexp
            match="The following code was generated by JFlex(.*) on [^*]*"
            replace="The following code was generated by JFlex\1"
        >
            <fileset dir="translator/generated/polyglot/ext/jedd/parse" includes="Lexer_c.java"/>
        </replaceregexp>
        <replaceregexp
            match="This class is a scanner generated by[^*]*\*[^*]*\*[^*]*\*[^*]*\*"
            replace="*"
            flags="s"
        >
            <fileset dir="translator/generated/polyglot/ext/jedd/parse" includes="Lexer_c.java"/>
        </replaceregexp>

    </target>
    <target name="jflex-dep" depends="settings">
        <dependset>
            <srcfileset dir="translator/src/polyglot/ext/jedd/parse" includes="jedd.flex"/>
            <targetfileset dir="translator/generated/polyglot/ext/jedd/parse"
                includes="Lexer_c.java"/>
        </dependset>
        <available property="jflex-up-to-date"
            file="translator/generated/polyglot/ext/jedd/parse/Lexer_c.java"/>
    </target>

    <target name="cup-translator" depends="settings,flex-translator,cup-dep,ppg-translator" unless="cup-up-to-date">
        <mkdir dir="translator/generated/polyglot/ext/jedd/parse"/>
        <java classname="java_cup.Main"
            fork="true"
            dir="translator/generated/polyglot/ext/jedd/parse"
            failonerror="true"
        >
            <classpath>
                <pathelement location="${polyglot.loc}"/>
            </classpath>
            <arg line="jedd_ppg.cup"/>
        </java>
        <!-- Get rid of timestamps -->
        <replaceregexp
            match="The following code was generated by CUP[^/]*//[^/]*//"
            replace=""
            flags="s"
        >
            <fileset dir="translator/generated/polyglot/ext/jedd/parse" includes="Grm.java,sym.java"/>
        </replaceregexp>
        <replaceregexp
            match="CUP[^*]*generated parser[^*]*\* @version[^*]*"
            replace=""
            flags="s"
        >
            <fileset dir="translator/generated/polyglot/ext/jedd/parse" includes="Grm.java,sym.java"/>
        </replaceregexp>
    </target>
    <target name="cup-dep" depends="ppg-translator,settings">
        <dependset>
            <srcfileset dir="translator/generated/polyglot/ext/jedd/parse" includes="jedd_ppg.cup"/>
            <targetfileset dir="translator/generated/polyglot/ext/jedd/parse"
                includes="Grm.java,sym.java"/>
        </dependset>
        <condition property="cup-up-to-date">
            <and>
                <available file="translator/generated/polyglot/ext/jedd/parse/Grm.java"/>
                <available file="translator/generated/polyglot/ext/jedd/parse/sym.java"/>
            </and>
        </condition>
    </target>

    <target name="ppg-translator" depends="settings,ppg-dep,flex-translator" unless="ppg-up-to-date">
        <mkdir dir="translator/generated/polyglot/ext/jedd/parse"/>
        <java classname="ppg.PPG"
            fork="true"
            dir="translator/src/polyglot/ext/jedd/parse"
            failonerror="true"
            output="translator/generated/polyglot/ext/jedd/parse/jedd_ppg.cup"
        >
            <classpath>
                <pathelement location="${polyglot.loc}"/>
            </classpath>
            <arg line="jedd.ppg"/>
        </java>
    </target>
    <target name="ppg-dep" depends="settings">
        <dependset>
            <srcfileset dir="translator/src/polyglot/ext/jedd/parse" includes="jedd.ppg"/>
            <targetfileset dir="translator/generated/polyglot/ext/jedd/parse"
                includes="jedd_ppg.cup"/>
        </dependset>
        <available property="ppg-up-to-date"
            file="translator/generated/polyglot/ext/jedd/parse/jedd_ppg.cup"/>
    </target>

    <target name="clean" depends="settings">
        <delete quiet="true">
            <fileset dir="runtime/classes" includes="**/*.class" />
            <fileset dir="translator/classes" includes="**/*.class" />
            <fileset dir="runtime/lib" includes="**/*.jar" />
            <fileset dir="translator/lib" includes="**/*.jar" />
        </delete>
    </target>

    <target name="veryclean" depends="settings,clean">
        <delete quiet="true">
            <fileset dir="runtime/generated" includes="**/*" />
            <fileset dir="translator/generated" includes="**/*" />
        </delete>
    </target>
</project>
