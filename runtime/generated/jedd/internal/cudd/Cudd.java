package jedd.internal.cudd;

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version: 1.3.17u-20030723-1531
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class Cudd {
  public static SWIGTYPE_p_DdNode Cudd_bddNot(SWIGTYPE_p_DdNode in) {
    long cPtr = CuddJNI.Cudd_bddNot(SWIGTYPE_p_DdNode.getCPtr(in));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_CubeArrayToBdd(SWIGTYPE_p_DdManager dd, int[] array) {
    long cPtr = CuddJNI.Cudd_CubeArrayToBdd__SWIG_0(SWIGTYPE_p_DdManager.getCPtr(dd), array);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_IndicesToCube(SWIGTYPE_p_DdManager dd, int[] array, int n) {
    long cPtr = CuddJNI.Cudd_IndicesToCube__SWIG_0(SWIGTYPE_p_DdManager.getCPtr(dd), array, n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_ShuffleHeap(SWIGTYPE_p_DdManager table, int[] permutation) {
    return CuddJNI.Cudd_ShuffleHeap__SWIG_0(SWIGTYPE_p_DdManager.getCPtr(table), permutation);
  }

  public static bddPair newPair(int size) {
    return new bddPair(CuddJNI.newPair(size), true);
  }

  public static void setPairs(SWIGTYPE_p_DdManager manager, bddPair pair, int[] from, int[] to) {
    CuddJNI.setPairs(SWIGTYPE_p_DdManager.getCPtr(manager), bddPair.getCPtr(pair), from, to);
  }

  public static SWIGTYPE_p_DdNode swapVariables(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode bdd, bddPair pair) {
    long cPtr = CuddJNI.swapVariables(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(bdd), bddPair.getCPtr(pair));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int equals(SWIGTYPE_p_DdNode n1, SWIGTYPE_p_DdNode n2) {
    return CuddJNI.equals(SWIGTYPE_p_DdNode.getCPtr(n1), SWIGTYPE_p_DdNode.getCPtr(n2));
  }

  public static void allCubes(SWIGTYPE_p_DdManager manager, int totalBits, SWIGTYPE_p_DdNode r, int[] cubes) {
    CuddJNI.allCubes(SWIGTYPE_p_DdManager.getCPtr(manager), totalBits, SWIGTYPE_p_DdNode.getCPtr(r), cubes);
  }

  public static SWIGTYPE_p_DdGen firstCube(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode r, int n, int[] cube) {
    long cPtr = CuddJNI.firstCube(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(r), n, cube);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdGen(cPtr, false);
  }

  public static int nextCube(SWIGTYPE_p_DdGen iterator, int n, int[] cube) {
    return CuddJNI.nextCube(SWIGTYPE_p_DdGen.getCPtr(iterator), n, cube);
  }

  public static void freeIterator(SWIGTYPE_p_DdGen iterator) {
    CuddJNI.freeIterator(SWIGTYPE_p_DdGen.getCPtr(iterator));
  }

  public static int isNull(SWIGTYPE_p_DdGen iterator) {
    return CuddJNI.isNull(SWIGTYPE_p_DdGen.getCPtr(iterator));
  }

  public static SWIGTYPE_p_DdNode Cudd_addNewVar(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_addNewVar(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addNewVarAtLevel(SWIGTYPE_p_DdManager dd, int level) {
    long cPtr = CuddJNI.Cudd_addNewVarAtLevel(SWIGTYPE_p_DdManager.getCPtr(dd), level);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddNewVar(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_bddNewVar(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddNewVarAtLevel(SWIGTYPE_p_DdManager dd, int level) {
    long cPtr = CuddJNI.Cudd_bddNewVarAtLevel(SWIGTYPE_p_DdManager.getCPtr(dd), level);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addIthVar(SWIGTYPE_p_DdManager dd, int i) {
    long cPtr = CuddJNI.Cudd_addIthVar(SWIGTYPE_p_DdManager.getCPtr(dd), i);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddIthVar(SWIGTYPE_p_DdManager dd, int i) {
    long cPtr = CuddJNI.Cudd_bddIthVar(SWIGTYPE_p_DdManager.getCPtr(dd), i);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddIthVar(SWIGTYPE_p_DdManager dd, int i) {
    long cPtr = CuddJNI.Cudd_zddIthVar(SWIGTYPE_p_DdManager.getCPtr(dd), i);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_zddVarsFromBddVars(SWIGTYPE_p_DdManager dd, int multiplicity) {
    return CuddJNI.Cudd_zddVarsFromBddVars(SWIGTYPE_p_DdManager.getCPtr(dd), multiplicity);
  }

  public static SWIGTYPE_p_DdNode Cudd_addConst(SWIGTYPE_p_DdManager dd, double c) {
    long cPtr = CuddJNI.Cudd_addConst(SWIGTYPE_p_DdManager.getCPtr(dd), c);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_IsNonConstant(SWIGTYPE_p_DdNode f) {
    return CuddJNI.Cudd_IsNonConstant(SWIGTYPE_p_DdNode.getCPtr(f));
  }

  public static void Cudd_AutodynEnable(SWIGTYPE_p_DdManager unique, int method) {
    CuddJNI.Cudd_AutodynEnable(SWIGTYPE_p_DdManager.getCPtr(unique), method);
  }

  public static void Cudd_AutodynDisable(SWIGTYPE_p_DdManager unique) {
    CuddJNI.Cudd_AutodynDisable(SWIGTYPE_p_DdManager.getCPtr(unique));
  }

  public static int Cudd_ReorderingStatus(SWIGTYPE_p_DdManager unique, SWIGTYPE_p_int method) {
    return CuddJNI.Cudd_ReorderingStatus(SWIGTYPE_p_DdManager.getCPtr(unique), SWIGTYPE_p_int.getCPtr(method));
  }

  public static void Cudd_AutodynEnableZdd(SWIGTYPE_p_DdManager unique, int method) {
    CuddJNI.Cudd_AutodynEnableZdd(SWIGTYPE_p_DdManager.getCPtr(unique), method);
  }

  public static void Cudd_AutodynDisableZdd(SWIGTYPE_p_DdManager unique) {
    CuddJNI.Cudd_AutodynDisableZdd(SWIGTYPE_p_DdManager.getCPtr(unique));
  }

  public static int Cudd_ReorderingStatusZdd(SWIGTYPE_p_DdManager unique, SWIGTYPE_p_int method) {
    return CuddJNI.Cudd_ReorderingStatusZdd(SWIGTYPE_p_DdManager.getCPtr(unique), SWIGTYPE_p_int.getCPtr(method));
  }

  public static int Cudd_zddRealignmentEnabled(SWIGTYPE_p_DdManager unique) {
    return CuddJNI.Cudd_zddRealignmentEnabled(SWIGTYPE_p_DdManager.getCPtr(unique));
  }

  public static void Cudd_zddRealignEnable(SWIGTYPE_p_DdManager unique) {
    CuddJNI.Cudd_zddRealignEnable(SWIGTYPE_p_DdManager.getCPtr(unique));
  }

  public static void Cudd_zddRealignDisable(SWIGTYPE_p_DdManager unique) {
    CuddJNI.Cudd_zddRealignDisable(SWIGTYPE_p_DdManager.getCPtr(unique));
  }

  public static int Cudd_bddRealignmentEnabled(SWIGTYPE_p_DdManager unique) {
    return CuddJNI.Cudd_bddRealignmentEnabled(SWIGTYPE_p_DdManager.getCPtr(unique));
  }

  public static void Cudd_bddRealignEnable(SWIGTYPE_p_DdManager unique) {
    CuddJNI.Cudd_bddRealignEnable(SWIGTYPE_p_DdManager.getCPtr(unique));
  }

  public static void Cudd_bddRealignDisable(SWIGTYPE_p_DdManager unique) {
    CuddJNI.Cudd_bddRealignDisable(SWIGTYPE_p_DdManager.getCPtr(unique));
  }

  public static SWIGTYPE_p_DdNode Cudd_ReadOne(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_ReadOne(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_ReadZddOne(SWIGTYPE_p_DdManager dd, int i) {
    long cPtr = CuddJNI.Cudd_ReadZddOne(SWIGTYPE_p_DdManager.getCPtr(dd), i);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_ReadZero(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_ReadZero(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_ReadLogicZero(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_ReadLogicZero(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_ReadPlusInfinity(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_ReadPlusInfinity(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_ReadMinusInfinity(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_ReadMinusInfinity(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_ReadBackground(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_ReadBackground(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static void Cudd_SetBackground(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode bck) {
    CuddJNI.Cudd_SetBackground(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(bck));
  }

  public static long Cudd_ReadCacheSlots(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadCacheSlots(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static double Cudd_ReadCacheUsedSlots(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadCacheUsedSlots(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static double Cudd_ReadCacheLookUps(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadCacheLookUps(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static double Cudd_ReadCacheHits(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadCacheHits(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static double Cudd_ReadRecursiveCalls(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadRecursiveCalls(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static long Cudd_ReadMinHit(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadMinHit(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetMinHit(SWIGTYPE_p_DdManager dd, long hr) {
    CuddJNI.Cudd_SetMinHit(SWIGTYPE_p_DdManager.getCPtr(dd), hr);
  }

  public static long Cudd_ReadLooseUpTo(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadLooseUpTo(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetLooseUpTo(SWIGTYPE_p_DdManager dd, long lut) {
    CuddJNI.Cudd_SetLooseUpTo(SWIGTYPE_p_DdManager.getCPtr(dd), lut);
  }

  public static long Cudd_ReadMaxCache(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadMaxCache(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static long Cudd_ReadMaxCacheHard(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadMaxCacheHard(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetMaxCacheHard(SWIGTYPE_p_DdManager dd, long mc) {
    CuddJNI.Cudd_SetMaxCacheHard(SWIGTYPE_p_DdManager.getCPtr(dd), mc);
  }

  public static int Cudd_ReadSize(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadSize(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_ReadZddSize(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadZddSize(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static long Cudd_ReadSlots(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadSlots(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static double Cudd_ReadUsedSlots(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadUsedSlots(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static double Cudd_ExpectedUsedSlots(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ExpectedUsedSlots(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static long Cudd_ReadKeys(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadKeys(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static long Cudd_ReadDead(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadDead(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static long Cudd_ReadMinDead(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadMinDead(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_ReadReorderings(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadReorderings(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_ReadReorderingTime(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadReorderingTime(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_ReadGarbageCollections(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadGarbageCollections(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_ReadGarbageCollectionTime(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadGarbageCollectionTime(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static double Cudd_ReadNodesFreed(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadNodesFreed(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static double Cudd_ReadNodesDropped(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadNodesDropped(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static double Cudd_ReadUniqueLookUps(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadUniqueLookUps(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static double Cudd_ReadUniqueLinks(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadUniqueLinks(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_ReadSiftMaxVar(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadSiftMaxVar(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetSiftMaxVar(SWIGTYPE_p_DdManager dd, int smv) {
    CuddJNI.Cudd_SetSiftMaxVar(SWIGTYPE_p_DdManager.getCPtr(dd), smv);
  }

  public static int Cudd_ReadSiftMaxSwap(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadSiftMaxSwap(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetSiftMaxSwap(SWIGTYPE_p_DdManager dd, int sms) {
    CuddJNI.Cudd_SetSiftMaxSwap(SWIGTYPE_p_DdManager.getCPtr(dd), sms);
  }

  public static double Cudd_ReadMaxGrowth(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadMaxGrowth(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetMaxGrowth(SWIGTYPE_p_DdManager dd, double mg) {
    CuddJNI.Cudd_SetMaxGrowth(SWIGTYPE_p_DdManager.getCPtr(dd), mg);
  }

  public static double Cudd_ReadMaxGrowthAlternate(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadMaxGrowthAlternate(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetMaxGrowthAlternate(SWIGTYPE_p_DdManager dd, double mg) {
    CuddJNI.Cudd_SetMaxGrowthAlternate(SWIGTYPE_p_DdManager.getCPtr(dd), mg);
  }

  public static int Cudd_ReadReorderingCycle(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadReorderingCycle(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetReorderingCycle(SWIGTYPE_p_DdManager dd, int cycle) {
    CuddJNI.Cudd_SetReorderingCycle(SWIGTYPE_p_DdManager.getCPtr(dd), cycle);
  }

  public static SWIGTYPE_p_MtrNode Cudd_ReadTree(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_ReadTree(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_MtrNode(cPtr, false);
  }

  public static void Cudd_SetTree(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_MtrNode tree) {
    CuddJNI.Cudd_SetTree(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_MtrNode.getCPtr(tree));
  }

  public static void Cudd_FreeTree(SWIGTYPE_p_DdManager dd) {
    CuddJNI.Cudd_FreeTree(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static SWIGTYPE_p_MtrNode Cudd_ReadZddTree(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_ReadZddTree(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_MtrNode(cPtr, false);
  }

  public static void Cudd_SetZddTree(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_MtrNode tree) {
    CuddJNI.Cudd_SetZddTree(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_MtrNode.getCPtr(tree));
  }

  public static void Cudd_FreeZddTree(SWIGTYPE_p_DdManager dd) {
    CuddJNI.Cudd_FreeZddTree(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static long Cudd_NodeReadIndex(SWIGTYPE_p_DdNode node) {
    return CuddJNI.Cudd_NodeReadIndex(SWIGTYPE_p_DdNode.getCPtr(node));
  }

  public static int Cudd_ReadPerm(SWIGTYPE_p_DdManager dd, int i) {
    return CuddJNI.Cudd_ReadPerm(SWIGTYPE_p_DdManager.getCPtr(dd), i);
  }

  public static int Cudd_ReadPermZdd(SWIGTYPE_p_DdManager dd, int i) {
    return CuddJNI.Cudd_ReadPermZdd(SWIGTYPE_p_DdManager.getCPtr(dd), i);
  }

  public static int Cudd_ReadInvPerm(SWIGTYPE_p_DdManager dd, int i) {
    return CuddJNI.Cudd_ReadInvPerm(SWIGTYPE_p_DdManager.getCPtr(dd), i);
  }

  public static int Cudd_ReadInvPermZdd(SWIGTYPE_p_DdManager dd, int i) {
    return CuddJNI.Cudd_ReadInvPermZdd(SWIGTYPE_p_DdManager.getCPtr(dd), i);
  }

  public static SWIGTYPE_p_DdNode Cudd_ReadVars(SWIGTYPE_p_DdManager dd, int i) {
    long cPtr = CuddJNI.Cudd_ReadVars(SWIGTYPE_p_DdManager.getCPtr(dd), i);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static double Cudd_ReadEpsilon(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadEpsilon(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetEpsilon(SWIGTYPE_p_DdManager dd, double ep) {
    CuddJNI.Cudd_SetEpsilon(SWIGTYPE_p_DdManager.getCPtr(dd), ep);
  }

  public static int Cudd_ReadGroupcheck(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadGroupcheck(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetGroupcheck(SWIGTYPE_p_DdManager dd, int gc) {
    CuddJNI.Cudd_SetGroupcheck(SWIGTYPE_p_DdManager.getCPtr(dd), gc);
  }

  public static int Cudd_GarbageCollectionEnabled(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_GarbageCollectionEnabled(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_EnableGarbageCollection(SWIGTYPE_p_DdManager dd) {
    CuddJNI.Cudd_EnableGarbageCollection(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_DisableGarbageCollection(SWIGTYPE_p_DdManager dd) {
    CuddJNI.Cudd_DisableGarbageCollection(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_DeadAreCounted(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_DeadAreCounted(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_TurnOnCountDead(SWIGTYPE_p_DdManager dd) {
    CuddJNI.Cudd_TurnOnCountDead(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_TurnOffCountDead(SWIGTYPE_p_DdManager dd) {
    CuddJNI.Cudd_TurnOffCountDead(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_ReadRecomb(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadRecomb(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetRecomb(SWIGTYPE_p_DdManager dd, int recomb) {
    CuddJNI.Cudd_SetRecomb(SWIGTYPE_p_DdManager.getCPtr(dd), recomb);
  }

  public static int Cudd_ReadSymmviolation(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadSymmviolation(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetSymmviolation(SWIGTYPE_p_DdManager dd, int symmviolation) {
    CuddJNI.Cudd_SetSymmviolation(SWIGTYPE_p_DdManager.getCPtr(dd), symmviolation);
  }

  public static int Cudd_ReadArcviolation(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadArcviolation(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetArcviolation(SWIGTYPE_p_DdManager dd, int arcviolation) {
    CuddJNI.Cudd_SetArcviolation(SWIGTYPE_p_DdManager.getCPtr(dd), arcviolation);
  }

  public static int Cudd_ReadPopulationSize(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadPopulationSize(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetPopulationSize(SWIGTYPE_p_DdManager dd, int populationSize) {
    CuddJNI.Cudd_SetPopulationSize(SWIGTYPE_p_DdManager.getCPtr(dd), populationSize);
  }

  public static int Cudd_ReadNumberXovers(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadNumberXovers(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetNumberXovers(SWIGTYPE_p_DdManager dd, int numberXovers) {
    CuddJNI.Cudd_SetNumberXovers(SWIGTYPE_p_DdManager.getCPtr(dd), numberXovers);
  }

  public static int Cudd_ReadMemoryInUse(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadMemoryInUse(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_PrintInfo(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_FILE fp) {
    return CuddJNI.Cudd_PrintInfo(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static int Cudd_ReadPeakNodeCount(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadPeakNodeCount(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_ReadPeakLiveNodeCount(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadPeakLiveNodeCount(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_ReadNodeCount(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadNodeCount(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_zddReadNodeCount(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_zddReadNodeCount(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_AddHook(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_f_p_struct_DdManager_p_char_p_void__int f, int where) {
    return CuddJNI.Cudd_AddHook(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_f_p_struct_DdManager_p_char_p_void__int.getCPtr(f), where);
  }

  public static int Cudd_RemoveHook(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_f_p_struct_DdManager_p_char_p_void__int f, int where) {
    return CuddJNI.Cudd_RemoveHook(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_f_p_struct_DdManager_p_char_p_void__int.getCPtr(f), where);
  }

  public static int Cudd_IsInHook(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_f_p_struct_DdManager_p_char_p_void__int f, int where) {
    return CuddJNI.Cudd_IsInHook(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_f_p_struct_DdManager_p_char_p_void__int.getCPtr(f), where);
  }

  public static int Cudd_StdPreReordHook(SWIGTYPE_p_DdManager dd, String str, SWIGTYPE_p_void data) {
    return CuddJNI.Cudd_StdPreReordHook(SWIGTYPE_p_DdManager.getCPtr(dd), str, SWIGTYPE_p_void.getCPtr(data));
  }

  public static int Cudd_StdPostReordHook(SWIGTYPE_p_DdManager dd, String str, SWIGTYPE_p_void data) {
    return CuddJNI.Cudd_StdPostReordHook(SWIGTYPE_p_DdManager.getCPtr(dd), str, SWIGTYPE_p_void.getCPtr(data));
  }

  public static int Cudd_EnableReorderingReporting(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_EnableReorderingReporting(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_DisableReorderingReporting(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_DisableReorderingReporting(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_ReorderingReporting(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReorderingReporting(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_ReadErrorCode(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadErrorCode(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_ClearErrorCode(SWIGTYPE_p_DdManager dd) {
    CuddJNI.Cudd_ClearErrorCode(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static SWIGTYPE_p_FILE Cudd_ReadStdout(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_ReadStdout(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FILE(cPtr, false);
  }

  public static void Cudd_SetStdout(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_FILE fp) {
    CuddJNI.Cudd_SetStdout(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static SWIGTYPE_p_FILE Cudd_ReadStderr(SWIGTYPE_p_DdManager dd) {
    long cPtr = CuddJNI.Cudd_ReadStderr(SWIGTYPE_p_DdManager.getCPtr(dd));
    return (cPtr == 0) ? null : new SWIGTYPE_p_FILE(cPtr, false);
  }

  public static void Cudd_SetStderr(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_FILE fp) {
    CuddJNI.Cudd_SetStderr(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static long Cudd_ReadNextReordering(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadNextReordering(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetNextReordering(SWIGTYPE_p_DdManager dd, long next) {
    CuddJNI.Cudd_SetNextReordering(SWIGTYPE_p_DdManager.getCPtr(dd), next);
  }

  public static double Cudd_ReadSwapSteps(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadSwapSteps(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static long Cudd_ReadMaxLive(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadMaxLive(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetMaxLive(SWIGTYPE_p_DdManager dd, long maxLive) {
    CuddJNI.Cudd_SetMaxLive(SWIGTYPE_p_DdManager.getCPtr(dd), maxLive);
  }

  public static int Cudd_ReadMaxMemory(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_ReadMaxMemory(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static void Cudd_SetMaxMemory(SWIGTYPE_p_DdManager dd, int maxMemory) {
    CuddJNI.Cudd_SetMaxMemory(SWIGTYPE_p_DdManager.getCPtr(dd), maxMemory);
  }

  public static int Cudd_bddBindVar(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddBindVar(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddUnbindVar(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddUnbindVar(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddVarIsBound(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddVarIsBound(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static SWIGTYPE_p_DdNode Cudd_addExistAbstract(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode cube) {
    long cPtr = CuddJNI.Cudd_addExistAbstract(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(cube));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addUnivAbstract(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode cube) {
    long cPtr = CuddJNI.Cudd_addUnivAbstract(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(cube));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addOrAbstract(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode cube) {
    long cPtr = CuddJNI.Cudd_addOrAbstract(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(cube));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addApply(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_f_p_DdManager_p_p_DdNode_p_p_DdNode__p_DdNode arg1, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addApply(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_f_p_DdManager_p_p_DdNode_p_p_DdNode__p_DdNode.getCPtr(arg1), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addPlus(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addPlus(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addTimes(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addTimes(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addThreshold(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addThreshold(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addSetNZ(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addSetNZ(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addDivide(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addDivide(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addMinus(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addMinus(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addMinimum(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addMinimum(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addMaximum(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addMaximum(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addOneZeroMaximum(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addOneZeroMaximum(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addDiff(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addDiff(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addAgreement(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addAgreement(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addOr(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addOr(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addNand(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addNand(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addNor(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addNor(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addXor(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addXor(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addXnor(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addXnor(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addMonadicApply(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_f_p_DdManager_p_DdNode__p_DdNode op, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_addMonadicApply(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_f_p_DdManager_p_DdNode__p_DdNode.getCPtr(op), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addLog(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_addLog(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addFindMax(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_addFindMax(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addFindMin(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_addFindMin(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addIthBit(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int bit) {
    long cPtr = CuddJNI.Cudd_addIthBit(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), bit);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addScalarInverse(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode epsilon) {
    long cPtr = CuddJNI.Cudd_addScalarInverse(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(epsilon));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addIte(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_DdNode h) {
    long cPtr = CuddJNI.Cudd_addIte(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_DdNode.getCPtr(h));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addIteConstant(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_DdNode h) {
    long cPtr = CuddJNI.Cudd_addIteConstant(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_DdNode.getCPtr(h));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addEvalConst(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_addEvalConst(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_addLeq(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    return CuddJNI.Cudd_addLeq(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
  }

  public static SWIGTYPE_p_DdNode Cudd_addCmpl(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_addCmpl(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addNegate(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_addNegate(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addRoundOff(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int N) {
    long cPtr = CuddJNI.Cudd_addRoundOff(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), N);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addWalsh(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode x, SWIGTYPE_p_p_DdNode y, int n) {
    long cPtr = CuddJNI.Cudd_addWalsh(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_DdNode.getCPtr(y), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addResidue(SWIGTYPE_p_DdManager dd, int n, int m, int options, int top) {
    long cPtr = CuddJNI.Cudd_addResidue(SWIGTYPE_p_DdManager.getCPtr(dd), n, m, options, top);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddAndAbstract(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_DdNode cube) {
    long cPtr = CuddJNI.Cudd_bddAndAbstract(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_DdNode.getCPtr(cube));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_ApaNumberOfDigits(int binaryDigits) {
    return CuddJNI.Cudd_ApaNumberOfDigits(binaryDigits);
  }

  public static SWIGTYPE_p_unsigned_short Cudd_NewApaNumber(int digits) {
    long cPtr = CuddJNI.Cudd_NewApaNumber(digits);
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_short(cPtr, false);
  }

  public static void Cudd_ApaCopy(int digits, SWIGTYPE_p_unsigned_short source, SWIGTYPE_p_unsigned_short dest) {
    CuddJNI.Cudd_ApaCopy(digits, SWIGTYPE_p_unsigned_short.getCPtr(source), SWIGTYPE_p_unsigned_short.getCPtr(dest));
  }

  public static int Cudd_ApaAdd(int digits, SWIGTYPE_p_unsigned_short a, SWIGTYPE_p_unsigned_short b, SWIGTYPE_p_unsigned_short sum) {
    return CuddJNI.Cudd_ApaAdd(digits, SWIGTYPE_p_unsigned_short.getCPtr(a), SWIGTYPE_p_unsigned_short.getCPtr(b), SWIGTYPE_p_unsigned_short.getCPtr(sum));
  }

  public static int Cudd_ApaSubtract(int digits, SWIGTYPE_p_unsigned_short a, SWIGTYPE_p_unsigned_short b, SWIGTYPE_p_unsigned_short diff) {
    return CuddJNI.Cudd_ApaSubtract(digits, SWIGTYPE_p_unsigned_short.getCPtr(a), SWIGTYPE_p_unsigned_short.getCPtr(b), SWIGTYPE_p_unsigned_short.getCPtr(diff));
  }

  public static int Cudd_ApaShortDivision(int digits, SWIGTYPE_p_unsigned_short dividend, int divisor, SWIGTYPE_p_unsigned_short quotient) {
    return CuddJNI.Cudd_ApaShortDivision(digits, SWIGTYPE_p_unsigned_short.getCPtr(dividend), divisor, SWIGTYPE_p_unsigned_short.getCPtr(quotient));
  }

  public static long Cudd_ApaIntDivision(int digits, SWIGTYPE_p_unsigned_short dividend, long divisor, SWIGTYPE_p_unsigned_short quotient) {
    return CuddJNI.Cudd_ApaIntDivision(digits, SWIGTYPE_p_unsigned_short.getCPtr(dividend), divisor, SWIGTYPE_p_unsigned_short.getCPtr(quotient));
  }

  public static void Cudd_ApaShiftRight(int digits, int in, SWIGTYPE_p_unsigned_short a, SWIGTYPE_p_unsigned_short b) {
    CuddJNI.Cudd_ApaShiftRight(digits, in, SWIGTYPE_p_unsigned_short.getCPtr(a), SWIGTYPE_p_unsigned_short.getCPtr(b));
  }

  public static void Cudd_ApaSetToLiteral(int digits, SWIGTYPE_p_unsigned_short number, int literal) {
    CuddJNI.Cudd_ApaSetToLiteral(digits, SWIGTYPE_p_unsigned_short.getCPtr(number), literal);
  }

  public static void Cudd_ApaPowerOfTwo(int digits, SWIGTYPE_p_unsigned_short number, int power) {
    CuddJNI.Cudd_ApaPowerOfTwo(digits, SWIGTYPE_p_unsigned_short.getCPtr(number), power);
  }

  public static int Cudd_ApaCompare(int digitsFirst, SWIGTYPE_p_unsigned_short first, int digitsSecond, SWIGTYPE_p_unsigned_short second) {
    return CuddJNI.Cudd_ApaCompare(digitsFirst, SWIGTYPE_p_unsigned_short.getCPtr(first), digitsSecond, SWIGTYPE_p_unsigned_short.getCPtr(second));
  }

  public static int Cudd_ApaCompareRatios(int digitsFirst, SWIGTYPE_p_unsigned_short firstNum, long firstDen, int digitsSecond, SWIGTYPE_p_unsigned_short secondNum, long secondDen) {
    return CuddJNI.Cudd_ApaCompareRatios(digitsFirst, SWIGTYPE_p_unsigned_short.getCPtr(firstNum), firstDen, digitsSecond, SWIGTYPE_p_unsigned_short.getCPtr(secondNum), secondDen);
  }

  public static int Cudd_ApaPrintHex(SWIGTYPE_p_FILE fp, int digits, SWIGTYPE_p_unsigned_short number) {
    return CuddJNI.Cudd_ApaPrintHex(SWIGTYPE_p_FILE.getCPtr(fp), digits, SWIGTYPE_p_unsigned_short.getCPtr(number));
  }

  public static int Cudd_ApaPrintDecimal(SWIGTYPE_p_FILE fp, int digits, SWIGTYPE_p_unsigned_short number) {
    return CuddJNI.Cudd_ApaPrintDecimal(SWIGTYPE_p_FILE.getCPtr(fp), digits, SWIGTYPE_p_unsigned_short.getCPtr(number));
  }

  public static int Cudd_ApaPrintExponential(SWIGTYPE_p_FILE fp, int digits, SWIGTYPE_p_unsigned_short number, int precision) {
    return CuddJNI.Cudd_ApaPrintExponential(SWIGTYPE_p_FILE.getCPtr(fp), digits, SWIGTYPE_p_unsigned_short.getCPtr(number), precision);
  }

  public static SWIGTYPE_p_unsigned_short Cudd_ApaCountMinterm(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode node, int nvars, SWIGTYPE_p_int digits) {
    long cPtr = CuddJNI.Cudd_ApaCountMinterm(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(node), nvars, SWIGTYPE_p_int.getCPtr(digits));
    return (cPtr == 0) ? null : new SWIGTYPE_p_unsigned_short(cPtr, false);
  }

  public static int Cudd_ApaPrintMinterm(SWIGTYPE_p_FILE fp, SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode node, int nvars) {
    return CuddJNI.Cudd_ApaPrintMinterm(SWIGTYPE_p_FILE.getCPtr(fp), SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(node), nvars);
  }

  public static int Cudd_ApaPrintMintermExp(SWIGTYPE_p_FILE fp, SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode node, int nvars, int precision) {
    return CuddJNI.Cudd_ApaPrintMintermExp(SWIGTYPE_p_FILE.getCPtr(fp), SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(node), nvars, precision);
  }

  public static int Cudd_ApaPrintDensity(SWIGTYPE_p_FILE fp, SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode node, int nvars) {
    return CuddJNI.Cudd_ApaPrintDensity(SWIGTYPE_p_FILE.getCPtr(fp), SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(node), nvars);
  }

  public static SWIGTYPE_p_DdNode Cudd_UnderApprox(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int numVars, int threshold, int safe, double quality) {
    long cPtr = CuddJNI.Cudd_UnderApprox(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), numVars, threshold, safe, quality);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_OverApprox(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int numVars, int threshold, int safe, double quality) {
    long cPtr = CuddJNI.Cudd_OverApprox(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), numVars, threshold, safe, quality);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_RemapUnderApprox(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int numVars, int threshold, double quality) {
    long cPtr = CuddJNI.Cudd_RemapUnderApprox(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), numVars, threshold, quality);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_RemapOverApprox(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int numVars, int threshold, double quality) {
    long cPtr = CuddJNI.Cudd_RemapOverApprox(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), numVars, threshold, quality);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_BiasedUnderApprox(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode b, int numVars, int threshold, double quality1, double quality0) {
    long cPtr = CuddJNI.Cudd_BiasedUnderApprox(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(b), numVars, threshold, quality1, quality0);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_BiasedOverApprox(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode b, int numVars, int threshold, double quality1, double quality0) {
    long cPtr = CuddJNI.Cudd_BiasedOverApprox(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(b), numVars, threshold, quality1, quality0);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddExistAbstract(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode cube) {
    long cPtr = CuddJNI.Cudd_bddExistAbstract(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(cube));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddXorExistAbstract(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_DdNode cube) {
    long cPtr = CuddJNI.Cudd_bddXorExistAbstract(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_DdNode.getCPtr(cube));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddUnivAbstract(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode cube) {
    long cPtr = CuddJNI.Cudd_bddUnivAbstract(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(cube));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddBooleanDiff(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, int x) {
    long cPtr = CuddJNI.Cudd_bddBooleanDiff(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), x);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_bddVarIsDependent(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode var) {
    return CuddJNI.Cudd_bddVarIsDependent(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(var));
  }

  public static double Cudd_bddCorrelation(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    return CuddJNI.Cudd_bddCorrelation(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
  }

  public static double Cudd_bddCorrelationWeights(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_double prob) {
    return CuddJNI.Cudd_bddCorrelationWeights(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_double.getCPtr(prob));
  }

  public static SWIGTYPE_p_DdNode Cudd_bddIte(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_DdNode h) {
    long cPtr = CuddJNI.Cudd_bddIte(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_DdNode.getCPtr(h));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddIteConstant(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_DdNode h) {
    long cPtr = CuddJNI.Cudd_bddIteConstant(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_DdNode.getCPtr(h));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddIntersect(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_bddIntersect(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddAnd(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_bddAnd(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddOr(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_bddOr(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddNand(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_bddNand(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddNor(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_bddNor(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddXor(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_bddXor(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddXnor(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_bddXnor(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_bddLeq(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    return CuddJNI.Cudd_bddLeq(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
  }

  public static SWIGTYPE_p_DdNode Cudd_addBddThreshold(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, double value) {
    long cPtr = CuddJNI.Cudd_addBddThreshold(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addBddStrictThreshold(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, double value) {
    long cPtr = CuddJNI.Cudd_addBddStrictThreshold(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), value);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addBddInterval(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, double lower, double upper) {
    long cPtr = CuddJNI.Cudd_addBddInterval(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), lower, upper);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addBddIthBit(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int bit) {
    long cPtr = CuddJNI.Cudd_addBddIthBit(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), bit);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_BddToAdd(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode B) {
    long cPtr = CuddJNI.Cudd_BddToAdd(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(B));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addBddPattern(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_addBddPattern(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddTransfer(SWIGTYPE_p_DdManager ddSource, SWIGTYPE_p_DdManager ddDestination, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_bddTransfer(SWIGTYPE_p_DdManager.getCPtr(ddSource), SWIGTYPE_p_DdManager.getCPtr(ddDestination), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_DebugCheck(SWIGTYPE_p_DdManager table) {
    return CuddJNI.Cudd_DebugCheck(SWIGTYPE_p_DdManager.getCPtr(table));
  }

  public static int Cudd_CheckKeys(SWIGTYPE_p_DdManager table) {
    return CuddJNI.Cudd_CheckKeys(SWIGTYPE_p_DdManager.getCPtr(table));
  }

  public static SWIGTYPE_p_DdNode Cudd_bddClippingAnd(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, int maxDepth, int direction) {
    long cPtr = CuddJNI.Cudd_bddClippingAnd(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), maxDepth, direction);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddClippingAndAbstract(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_DdNode cube, int maxDepth, int direction) {
    long cPtr = CuddJNI.Cudd_bddClippingAndAbstract(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_DdNode.getCPtr(cube), maxDepth, direction);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_Cofactor(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_Cofactor(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddCompose(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, int v) {
    long cPtr = CuddJNI.Cudd_bddCompose(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), v);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addCompose(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, int v) {
    long cPtr = CuddJNI.Cudd_addCompose(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), v);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addPermute(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode node, SWIGTYPE_p_int permut) {
    long cPtr = CuddJNI.Cudd_addPermute(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(node), SWIGTYPE_p_int.getCPtr(permut));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addSwapVariables(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_DdNode x, SWIGTYPE_p_p_DdNode y, int n) {
    long cPtr = CuddJNI.Cudd_addSwapVariables(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_DdNode.getCPtr(y), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddPermute(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode node, SWIGTYPE_p_int permut) {
    long cPtr = CuddJNI.Cudd_bddPermute(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(node), SWIGTYPE_p_int.getCPtr(permut));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddVarMap(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_bddVarMap(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_SetVarMap(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_p_DdNode x, SWIGTYPE_p_p_DdNode y, int n) {
    return CuddJNI.Cudd_SetVarMap(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_DdNode.getCPtr(y), n);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddSwapVariables(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_DdNode x, SWIGTYPE_p_p_DdNode y, int n) {
    long cPtr = CuddJNI.Cudd_bddSwapVariables(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_DdNode.getCPtr(y), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddAdjPermuteX(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode B, SWIGTYPE_p_p_DdNode x, int n) {
    long cPtr = CuddJNI.Cudd_bddAdjPermuteX(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(B), SWIGTYPE_p_p_DdNode.getCPtr(x), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addVectorCompose(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_DdNode vector) {
    long cPtr = CuddJNI.Cudd_addVectorCompose(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(vector));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addGeneralVectorCompose(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_DdNode vectorOn, SWIGTYPE_p_p_DdNode vectorOff) {
    long cPtr = CuddJNI.Cudd_addGeneralVectorCompose(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(vectorOn), SWIGTYPE_p_p_DdNode.getCPtr(vectorOff));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addNonSimCompose(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_DdNode vector) {
    long cPtr = CuddJNI.Cudd_addNonSimCompose(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(vector));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddVectorCompose(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_DdNode vector) {
    long cPtr = CuddJNI.Cudd_bddVectorCompose(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(vector));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_bddApproxConjDecomp(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_p_DdNode conjuncts) {
    return CuddJNI.Cudd_bddApproxConjDecomp(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_p_DdNode.getCPtr(conjuncts));
  }

  public static int Cudd_bddApproxDisjDecomp(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_p_DdNode disjuncts) {
    return CuddJNI.Cudd_bddApproxDisjDecomp(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_p_DdNode.getCPtr(disjuncts));
  }

  public static int Cudd_bddIterConjDecomp(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_p_DdNode conjuncts) {
    return CuddJNI.Cudd_bddIterConjDecomp(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_p_DdNode.getCPtr(conjuncts));
  }

  public static int Cudd_bddIterDisjDecomp(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_p_DdNode disjuncts) {
    return CuddJNI.Cudd_bddIterDisjDecomp(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_p_DdNode.getCPtr(disjuncts));
  }

  public static int Cudd_bddGenConjDecomp(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_p_DdNode conjuncts) {
    return CuddJNI.Cudd_bddGenConjDecomp(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_p_DdNode.getCPtr(conjuncts));
  }

  public static int Cudd_bddGenDisjDecomp(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_p_DdNode disjuncts) {
    return CuddJNI.Cudd_bddGenDisjDecomp(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_p_DdNode.getCPtr(disjuncts));
  }

  public static int Cudd_bddVarConjDecomp(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_p_DdNode conjuncts) {
    return CuddJNI.Cudd_bddVarConjDecomp(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_p_DdNode.getCPtr(conjuncts));
  }

  public static int Cudd_bddVarDisjDecomp(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_p_DdNode disjuncts) {
    return CuddJNI.Cudd_bddVarDisjDecomp(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_p_DdNode.getCPtr(disjuncts));
  }

  public static SWIGTYPE_p_DdNode Cudd_FindEssential(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_FindEssential(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_bddIsVarEssential(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, int id, int phase) {
    return CuddJNI.Cudd_bddIsVarEssential(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), id, phase);
  }

  public static int Cudd_DumpBlif(SWIGTYPE_p_DdManager dd, int n, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_char inames, SWIGTYPE_p_p_char onames, String mname, SWIGTYPE_p_FILE fp) {
    return CuddJNI.Cudd_DumpBlif(SWIGTYPE_p_DdManager.getCPtr(dd), n, SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_char.getCPtr(inames), SWIGTYPE_p_p_char.getCPtr(onames), mname, SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static int Cudd_DumpBlifBody(SWIGTYPE_p_DdManager dd, int n, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_char inames, SWIGTYPE_p_p_char onames, SWIGTYPE_p_FILE fp) {
    return CuddJNI.Cudd_DumpBlifBody(SWIGTYPE_p_DdManager.getCPtr(dd), n, SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_char.getCPtr(inames), SWIGTYPE_p_p_char.getCPtr(onames), SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static int Cudd_DumpDot(SWIGTYPE_p_DdManager dd, int n, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_char inames, SWIGTYPE_p_p_char onames, SWIGTYPE_p_FILE fp) {
    return CuddJNI.Cudd_DumpDot(SWIGTYPE_p_DdManager.getCPtr(dd), n, SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_char.getCPtr(inames), SWIGTYPE_p_p_char.getCPtr(onames), SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static int Cudd_DumpDaVinci(SWIGTYPE_p_DdManager dd, int n, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_char inames, SWIGTYPE_p_p_char onames, SWIGTYPE_p_FILE fp) {
    return CuddJNI.Cudd_DumpDaVinci(SWIGTYPE_p_DdManager.getCPtr(dd), n, SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_char.getCPtr(inames), SWIGTYPE_p_p_char.getCPtr(onames), SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static int Cudd_DumpDDcal(SWIGTYPE_p_DdManager dd, int n, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_char inames, SWIGTYPE_p_p_char onames, SWIGTYPE_p_FILE fp) {
    return CuddJNI.Cudd_DumpDDcal(SWIGTYPE_p_DdManager.getCPtr(dd), n, SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_char.getCPtr(inames), SWIGTYPE_p_p_char.getCPtr(onames), SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static int Cudd_DumpFactoredForm(SWIGTYPE_p_DdManager dd, int n, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_char inames, SWIGTYPE_p_p_char onames, SWIGTYPE_p_FILE fp) {
    return CuddJNI.Cudd_DumpFactoredForm(SWIGTYPE_p_DdManager.getCPtr(dd), n, SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_char.getCPtr(inames), SWIGTYPE_p_p_char.getCPtr(onames), SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static SWIGTYPE_p_DdNode Cudd_bddConstrain(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode c) {
    long cPtr = CuddJNI.Cudd_bddConstrain(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(c));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddRestrict(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode c) {
    long cPtr = CuddJNI.Cudd_bddRestrict(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(c));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addConstrain(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode c) {
    long cPtr = CuddJNI.Cudd_addConstrain(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(c));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_p_DdNode Cudd_bddConstrainDecomp(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_bddConstrainDecomp(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addRestrict(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode c) {
    long cPtr = CuddJNI.Cudd_addRestrict(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(c));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_p_DdNode Cudd_bddCharToVect(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_bddCharToVect(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddLICompaction(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode c) {
    long cPtr = CuddJNI.Cudd_bddLICompaction(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(c));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddSqueeze(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode l, SWIGTYPE_p_DdNode u) {
    long cPtr = CuddJNI.Cudd_bddSqueeze(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(l), SWIGTYPE_p_DdNode.getCPtr(u));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddMinimize(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode c) {
    long cPtr = CuddJNI.Cudd_bddMinimize(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(c));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_SubsetCompress(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int nvars, int threshold) {
    long cPtr = CuddJNI.Cudd_SubsetCompress(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), nvars, threshold);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_SupersetCompress(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int nvars, int threshold) {
    long cPtr = CuddJNI.Cudd_SupersetCompress(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), nvars, threshold);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_MtrNode Cudd_MakeTreeNode(SWIGTYPE_p_DdManager dd, long low, long size, long type) {
    long cPtr = CuddJNI.Cudd_MakeTreeNode(SWIGTYPE_p_DdManager.getCPtr(dd), low, size, type);
    return (cPtr == 0) ? null : new SWIGTYPE_p_MtrNode(cPtr, false);
  }

  public static int Cudd_addHarwell(SWIGTYPE_p_FILE fp, SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode E, SWIGTYPE_p_p_p_DdNode x, SWIGTYPE_p_p_p_DdNode y, SWIGTYPE_p_p_p_DdNode xn, SWIGTYPE_p_p_p_DdNode yn_, SWIGTYPE_p_int nx, SWIGTYPE_p_int ny, SWIGTYPE_p_int m, SWIGTYPE_p_int n, int bx, int sx, int by, int sy, int pr) {
    return CuddJNI.Cudd_addHarwell(SWIGTYPE_p_FILE.getCPtr(fp), SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(E), SWIGTYPE_p_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_p_DdNode.getCPtr(y), SWIGTYPE_p_p_p_DdNode.getCPtr(xn), SWIGTYPE_p_p_p_DdNode.getCPtr(yn_), SWIGTYPE_p_int.getCPtr(nx), SWIGTYPE_p_int.getCPtr(ny), SWIGTYPE_p_int.getCPtr(m), SWIGTYPE_p_int.getCPtr(n), bx, sx, by, sy, pr);
  }

  public static SWIGTYPE_p_DdManager Cudd_Init(long numVars, long numVarsZ, long numSlots, long cacheSize, long maxMemory) {
    long cPtr = CuddJNI.Cudd_Init(numVars, numVarsZ, numSlots, cacheSize, maxMemory);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdManager(cPtr, false);
  }

  public static void Cudd_Quit(SWIGTYPE_p_DdManager unique) {
    CuddJNI.Cudd_Quit(SWIGTYPE_p_DdManager.getCPtr(unique));
  }

  public static int Cudd_PrintLinear(SWIGTYPE_p_DdManager table) {
    return CuddJNI.Cudd_PrintLinear(SWIGTYPE_p_DdManager.getCPtr(table));
  }

  public static int Cudd_ReadLinear(SWIGTYPE_p_DdManager table, int x, int y) {
    return CuddJNI.Cudd_ReadLinear(SWIGTYPE_p_DdManager.getCPtr(table), x, y);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddLiteralSetIntersection(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_bddLiteralSetIntersection(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addMatrixMultiply(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode A, SWIGTYPE_p_DdNode B, SWIGTYPE_p_p_DdNode z, int nz) {
    long cPtr = CuddJNI.Cudd_addMatrixMultiply(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(A), SWIGTYPE_p_DdNode.getCPtr(B), SWIGTYPE_p_p_DdNode.getCPtr(z), nz);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addTimesPlus(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode A, SWIGTYPE_p_DdNode B, SWIGTYPE_p_p_DdNode z, int nz) {
    long cPtr = CuddJNI.Cudd_addTimesPlus(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(A), SWIGTYPE_p_DdNode.getCPtr(B), SWIGTYPE_p_p_DdNode.getCPtr(z), nz);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addTriangle(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_p_DdNode z, int nz) {
    long cPtr = CuddJNI.Cudd_addTriangle(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_p_DdNode.getCPtr(z), nz);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addOuterSum(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode M, SWIGTYPE_p_DdNode r, SWIGTYPE_p_DdNode c) {
    long cPtr = CuddJNI.Cudd_addOuterSum(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(M), SWIGTYPE_p_DdNode.getCPtr(r), SWIGTYPE_p_DdNode.getCPtr(c));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_PrioritySelect(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode R, SWIGTYPE_p_p_DdNode x, SWIGTYPE_p_p_DdNode y, SWIGTYPE_p_p_DdNode z, SWIGTYPE_p_DdNode Pi, int n, SWIGTYPE_p_f_p_DdManager_int_p_p_DdNode_p_p_DdNode_p_p_DdNode__p_DdNode arg7) {
    long cPtr = CuddJNI.Cudd_PrioritySelect(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(R), SWIGTYPE_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_DdNode.getCPtr(y), SWIGTYPE_p_p_DdNode.getCPtr(z), SWIGTYPE_p_DdNode.getCPtr(Pi), n, SWIGTYPE_p_f_p_DdManager_int_p_p_DdNode_p_p_DdNode_p_p_DdNode__p_DdNode.getCPtr(arg7));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_Xgty(SWIGTYPE_p_DdManager dd, int N, SWIGTYPE_p_p_DdNode z, SWIGTYPE_p_p_DdNode x, SWIGTYPE_p_p_DdNode y) {
    long cPtr = CuddJNI.Cudd_Xgty(SWIGTYPE_p_DdManager.getCPtr(dd), N, SWIGTYPE_p_p_DdNode.getCPtr(z), SWIGTYPE_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_DdNode.getCPtr(y));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_Xeqy(SWIGTYPE_p_DdManager dd, int N, SWIGTYPE_p_p_DdNode x, SWIGTYPE_p_p_DdNode y) {
    long cPtr = CuddJNI.Cudd_Xeqy(SWIGTYPE_p_DdManager.getCPtr(dd), N, SWIGTYPE_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_DdNode.getCPtr(y));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addXeqy(SWIGTYPE_p_DdManager dd, int N, SWIGTYPE_p_p_DdNode x, SWIGTYPE_p_p_DdNode y) {
    long cPtr = CuddJNI.Cudd_addXeqy(SWIGTYPE_p_DdManager.getCPtr(dd), N, SWIGTYPE_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_DdNode.getCPtr(y));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_Dxygtdxz(SWIGTYPE_p_DdManager dd, int N, SWIGTYPE_p_p_DdNode x, SWIGTYPE_p_p_DdNode y, SWIGTYPE_p_p_DdNode z) {
    long cPtr = CuddJNI.Cudd_Dxygtdxz(SWIGTYPE_p_DdManager.getCPtr(dd), N, SWIGTYPE_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_DdNode.getCPtr(y), SWIGTYPE_p_p_DdNode.getCPtr(z));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_Dxygtdyz(SWIGTYPE_p_DdManager dd, int N, SWIGTYPE_p_p_DdNode x, SWIGTYPE_p_p_DdNode y, SWIGTYPE_p_p_DdNode z) {
    long cPtr = CuddJNI.Cudd_Dxygtdyz(SWIGTYPE_p_DdManager.getCPtr(dd), N, SWIGTYPE_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_DdNode.getCPtr(y), SWIGTYPE_p_p_DdNode.getCPtr(z));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_CProjection(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode R, SWIGTYPE_p_DdNode Y) {
    long cPtr = CuddJNI.Cudd_CProjection(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(R), SWIGTYPE_p_DdNode.getCPtr(Y));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addHamming(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode xVars, SWIGTYPE_p_p_DdNode yVars, int nVars) {
    long cPtr = CuddJNI.Cudd_addHamming(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(xVars), SWIGTYPE_p_p_DdNode.getCPtr(yVars), nVars);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_MinHammingDist(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_int minterm, int upperBound) {
    return CuddJNI.Cudd_MinHammingDist(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_int.getCPtr(minterm), upperBound);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddClosestCube(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_int distance) {
    long cPtr = CuddJNI.Cudd_bddClosestCube(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_int.getCPtr(distance));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_addRead(SWIGTYPE_p_FILE fp, SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode E, SWIGTYPE_p_p_p_DdNode x, SWIGTYPE_p_p_p_DdNode y, SWIGTYPE_p_p_p_DdNode xn, SWIGTYPE_p_p_p_DdNode yn_, SWIGTYPE_p_int nx, SWIGTYPE_p_int ny, SWIGTYPE_p_int m, SWIGTYPE_p_int n, int bx, int sx, int by, int sy) {
    return CuddJNI.Cudd_addRead(SWIGTYPE_p_FILE.getCPtr(fp), SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(E), SWIGTYPE_p_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_p_DdNode.getCPtr(y), SWIGTYPE_p_p_p_DdNode.getCPtr(xn), SWIGTYPE_p_p_p_DdNode.getCPtr(yn_), SWIGTYPE_p_int.getCPtr(nx), SWIGTYPE_p_int.getCPtr(ny), SWIGTYPE_p_int.getCPtr(m), SWIGTYPE_p_int.getCPtr(n), bx, sx, by, sy);
  }

  public static int Cudd_bddRead(SWIGTYPE_p_FILE fp, SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode E, SWIGTYPE_p_p_p_DdNode x, SWIGTYPE_p_p_p_DdNode y, SWIGTYPE_p_int nx, SWIGTYPE_p_int ny, SWIGTYPE_p_int m, SWIGTYPE_p_int n, int bx, int sx, int by, int sy) {
    return CuddJNI.Cudd_bddRead(SWIGTYPE_p_FILE.getCPtr(fp), SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(E), SWIGTYPE_p_p_p_DdNode.getCPtr(x), SWIGTYPE_p_p_p_DdNode.getCPtr(y), SWIGTYPE_p_int.getCPtr(nx), SWIGTYPE_p_int.getCPtr(ny), SWIGTYPE_p_int.getCPtr(m), SWIGTYPE_p_int.getCPtr(n), bx, sx, by, sy);
  }

  public static void Cudd_Ref(SWIGTYPE_p_DdNode n) {
    CuddJNI.Cudd_Ref(SWIGTYPE_p_DdNode.getCPtr(n));
  }

  public static void Cudd_RecursiveDeref(SWIGTYPE_p_DdManager table, SWIGTYPE_p_DdNode n) {
    CuddJNI.Cudd_RecursiveDeref(SWIGTYPE_p_DdManager.getCPtr(table), SWIGTYPE_p_DdNode.getCPtr(n));
  }

  public static void Cudd_IterDerefBdd(SWIGTYPE_p_DdManager table, SWIGTYPE_p_DdNode n) {
    CuddJNI.Cudd_IterDerefBdd(SWIGTYPE_p_DdManager.getCPtr(table), SWIGTYPE_p_DdNode.getCPtr(n));
  }

  public static void Cudd_DelayedDerefBdd(SWIGTYPE_p_DdManager table, SWIGTYPE_p_DdNode n) {
    CuddJNI.Cudd_DelayedDerefBdd(SWIGTYPE_p_DdManager.getCPtr(table), SWIGTYPE_p_DdNode.getCPtr(n));
  }

  public static void Cudd_RecursiveDerefZdd(SWIGTYPE_p_DdManager table, SWIGTYPE_p_DdNode n) {
    CuddJNI.Cudd_RecursiveDerefZdd(SWIGTYPE_p_DdManager.getCPtr(table), SWIGTYPE_p_DdNode.getCPtr(n));
  }

  public static void Cudd_Deref(SWIGTYPE_p_DdNode node) {
    CuddJNI.Cudd_Deref(SWIGTYPE_p_DdNode.getCPtr(node));
  }

  public static int Cudd_CheckZeroRef(SWIGTYPE_p_DdManager manager) {
    return CuddJNI.Cudd_CheckZeroRef(SWIGTYPE_p_DdManager.getCPtr(manager));
  }

  public static int Cudd_ReduceHeap(SWIGTYPE_p_DdManager table, int heuristic, int minsize) {
    return CuddJNI.Cudd_ReduceHeap(SWIGTYPE_p_DdManager.getCPtr(table), heuristic, minsize);
  }

  public static int Cudd_ShuffleHeap(SWIGTYPE_p_DdManager table, SWIGTYPE_p_int permutation) {
    return CuddJNI.Cudd_ShuffleHeap__SWIG_1(SWIGTYPE_p_DdManager.getCPtr(table), SWIGTYPE_p_int.getCPtr(permutation));
  }

  public static SWIGTYPE_p_DdNode Cudd_Eval(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_int inputs) {
    long cPtr = CuddJNI.Cudd_Eval(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_int.getCPtr(inputs));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_ShortestPath(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_int weight, SWIGTYPE_p_int support, SWIGTYPE_p_int length) {
    long cPtr = CuddJNI.Cudd_ShortestPath(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_int.getCPtr(weight), SWIGTYPE_p_int.getCPtr(support), SWIGTYPE_p_int.getCPtr(length));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_LargestCube(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_int length) {
    long cPtr = CuddJNI.Cudd_LargestCube(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_int.getCPtr(length));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_ShortestLength(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode f, SWIGTYPE_p_int weight) {
    return CuddJNI.Cudd_ShortestLength(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_int.getCPtr(weight));
  }

  public static SWIGTYPE_p_DdNode Cudd_Decreasing(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int i) {
    long cPtr = CuddJNI.Cudd_Decreasing(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), i);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_Increasing(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int i) {
    long cPtr = CuddJNI.Cudd_Increasing(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), i);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_EquivDC(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode F, SWIGTYPE_p_DdNode G, SWIGTYPE_p_DdNode D) {
    return CuddJNI.Cudd_EquivDC(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(F), SWIGTYPE_p_DdNode.getCPtr(G), SWIGTYPE_p_DdNode.getCPtr(D));
  }

  public static int Cudd_bddLeqUnless(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_DdNode D) {
    return CuddJNI.Cudd_bddLeqUnless(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_DdNode.getCPtr(D));
  }

  public static int Cudd_EqualSupNorm(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, double tolerance, int pr) {
    return CuddJNI.Cudd_EqualSupNorm(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), tolerance, pr);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddMakePrime(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode cube, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_bddMakePrime(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(cube), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_double Cudd_CofMinterm(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode node) {
    long cPtr = CuddJNI.Cudd_CofMinterm(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(node));
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_SolveEqn(SWIGTYPE_p_DdManager bdd, SWIGTYPE_p_DdNode F, SWIGTYPE_p_DdNode Y, SWIGTYPE_p_p_DdNode G, SWIGTYPE_p_p_int yIndex, int n) {
    long cPtr = CuddJNI.Cudd_SolveEqn(SWIGTYPE_p_DdManager.getCPtr(bdd), SWIGTYPE_p_DdNode.getCPtr(F), SWIGTYPE_p_DdNode.getCPtr(Y), SWIGTYPE_p_p_DdNode.getCPtr(G), SWIGTYPE_p_p_int.getCPtr(yIndex), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_VerifySol(SWIGTYPE_p_DdManager bdd, SWIGTYPE_p_DdNode F, SWIGTYPE_p_p_DdNode G, SWIGTYPE_p_int yIndex, int n) {
    long cPtr = CuddJNI.Cudd_VerifySol(SWIGTYPE_p_DdManager.getCPtr(bdd), SWIGTYPE_p_DdNode.getCPtr(F), SWIGTYPE_p_p_DdNode.getCPtr(G), SWIGTYPE_p_int.getCPtr(yIndex), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_SplitSet(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode S, SWIGTYPE_p_p_DdNode xVars, int n, double m) {
    long cPtr = CuddJNI.Cudd_SplitSet(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(S), SWIGTYPE_p_p_DdNode.getCPtr(xVars), n, m);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_SubsetHeavyBranch(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int numVars, int threshold) {
    long cPtr = CuddJNI.Cudd_SubsetHeavyBranch(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), numVars, threshold);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_SupersetHeavyBranch(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int numVars, int threshold) {
    long cPtr = CuddJNI.Cudd_SupersetHeavyBranch(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), numVars, threshold);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_SubsetShortPaths(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int numVars, int threshold, int hardlimit) {
    long cPtr = CuddJNI.Cudd_SubsetShortPaths(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), numVars, threshold, hardlimit);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_SupersetShortPaths(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int numVars, int threshold, int hardlimit) {
    long cPtr = CuddJNI.Cudd_SupersetShortPaths(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), numVars, threshold, hardlimit);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static void Cudd_SymmProfile(SWIGTYPE_p_DdManager table, int lower, int upper) {
    CuddJNI.Cudd_SymmProfile(SWIGTYPE_p_DdManager.getCPtr(table), lower, upper);
  }

  public static long Cudd_Prime(long p) {
    return CuddJNI.Cudd_Prime(p);
  }

  public static int Cudd_PrintMinterm(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode node) {
    return CuddJNI.Cudd_PrintMinterm(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(node));
  }

  public static int Cudd_bddPrintCover(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode l, SWIGTYPE_p_DdNode u) {
    return CuddJNI.Cudd_bddPrintCover(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(l), SWIGTYPE_p_DdNode.getCPtr(u));
  }

  public static int Cudd_PrintDebug(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int n, int pr) {
    return CuddJNI.Cudd_PrintDebug(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), n, pr);
  }

  public static int Cudd_DagSize(SWIGTYPE_p_DdNode node) {
    return CuddJNI.Cudd_DagSize(SWIGTYPE_p_DdNode.getCPtr(node));
  }

  public static int Cudd_EstimateCofactor(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode node, int i, int phase) {
    return CuddJNI.Cudd_EstimateCofactor(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(node), i, phase);
  }

  public static int Cudd_EstimateCofactorSimple(SWIGTYPE_p_DdNode node, int i) {
    return CuddJNI.Cudd_EstimateCofactorSimple(SWIGTYPE_p_DdNode.getCPtr(node), i);
  }

  public static int Cudd_SharingSize(SWIGTYPE_p_p_DdNode nodeArray, int n) {
    return CuddJNI.Cudd_SharingSize(SWIGTYPE_p_p_DdNode.getCPtr(nodeArray), n);
  }

  public static double Cudd_CountMinterm(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode node, int nvars) {
    return CuddJNI.Cudd_CountMinterm(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(node), nvars);
  }

  public static int Cudd_EpdCountMinterm(SWIGTYPE_p_DdManager manager, SWIGTYPE_p_DdNode node, int nvars, SWIGTYPE_p_EpDouble epd) {
    return CuddJNI.Cudd_EpdCountMinterm(SWIGTYPE_p_DdManager.getCPtr(manager), SWIGTYPE_p_DdNode.getCPtr(node), nvars, SWIGTYPE_p_EpDouble.getCPtr(epd));
  }

  public static double Cudd_CountPath(SWIGTYPE_p_DdNode node) {
    return CuddJNI.Cudd_CountPath(SWIGTYPE_p_DdNode.getCPtr(node));
  }

  public static double Cudd_CountPathsToNonZero(SWIGTYPE_p_DdNode node) {
    return CuddJNI.Cudd_CountPathsToNonZero(SWIGTYPE_p_DdNode.getCPtr(node));
  }

  public static SWIGTYPE_p_DdNode Cudd_Support(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_Support(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_int Cudd_SupportIndex(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_SupportIndex(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static int Cudd_SupportSize(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    return CuddJNI.Cudd_SupportSize(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
  }

  public static SWIGTYPE_p_DdNode Cudd_VectorSupport(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode F, int n) {
    long cPtr = CuddJNI.Cudd_VectorSupport(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(F), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_int Cudd_VectorSupportIndex(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode F, int n) {
    long cPtr = CuddJNI.Cudd_VectorSupportIndex(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(F), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_int(cPtr, false);
  }

  public static int Cudd_VectorSupportSize(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode F, int n) {
    return CuddJNI.Cudd_VectorSupportSize(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(F), n);
  }

  public static int Cudd_ClassifySupport(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_p_DdNode common, SWIGTYPE_p_p_DdNode onlyF, SWIGTYPE_p_p_DdNode onlyG) {
    return CuddJNI.Cudd_ClassifySupport(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_p_DdNode.getCPtr(common), SWIGTYPE_p_p_DdNode.getCPtr(onlyF), SWIGTYPE_p_p_DdNode.getCPtr(onlyG));
  }

  public static int Cudd_CountLeaves(SWIGTYPE_p_DdNode node) {
    return CuddJNI.Cudd_CountLeaves(SWIGTYPE_p_DdNode.getCPtr(node));
  }

  public static int Cudd_bddPickOneCube(SWIGTYPE_p_DdManager ddm, SWIGTYPE_p_DdNode node, String string) {
    return CuddJNI.Cudd_bddPickOneCube(SWIGTYPE_p_DdManager.getCPtr(ddm), SWIGTYPE_p_DdNode.getCPtr(node), string);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddPickOneMinterm(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_DdNode vars, int n) {
    long cPtr = CuddJNI.Cudd_bddPickOneMinterm(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(vars), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_p_DdNode Cudd_bddPickArbitraryMinterms(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_DdNode vars, int n, int k) {
    long cPtr = CuddJNI.Cudd_bddPickArbitraryMinterms(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(vars), n, k);
    return (cPtr == 0) ? null : new SWIGTYPE_p_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_SubsetWithMaskVars(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_DdNode vars, int nvars, SWIGTYPE_p_p_DdNode maskVars, int mvars) {
    long cPtr = CuddJNI.Cudd_SubsetWithMaskVars(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(vars), nvars, SWIGTYPE_p_p_DdNode.getCPtr(maskVars), mvars);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdGen Cudd_FirstCube(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_int cube, SWIGTYPE_p_double value) {
    long cPtr = CuddJNI.Cudd_FirstCube(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_int.getCPtr(cube), SWIGTYPE_p_double.getCPtr(value));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdGen(cPtr, false);
  }

  public static int Cudd_NextCube(SWIGTYPE_p_DdGen gen, SWIGTYPE_p_p_int cube, SWIGTYPE_p_double value) {
    return CuddJNI.Cudd_NextCube(SWIGTYPE_p_DdGen.getCPtr(gen), SWIGTYPE_p_p_int.getCPtr(cube), SWIGTYPE_p_double.getCPtr(value));
  }

  public static SWIGTYPE_p_DdNode Cudd_bddComputeCube(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode vars, SWIGTYPE_p_int phase, int n) {
    long cPtr = CuddJNI.Cudd_bddComputeCube(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(vars), SWIGTYPE_p_int.getCPtr(phase), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_addComputeCube(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_p_DdNode vars, SWIGTYPE_p_int phase, int n) {
    long cPtr = CuddJNI.Cudd_addComputeCube(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_p_DdNode.getCPtr(vars), SWIGTYPE_p_int.getCPtr(phase), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_CubeArrayToBdd(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_int array) {
    long cPtr = CuddJNI.Cudd_CubeArrayToBdd__SWIG_1(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_int.getCPtr(array));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_BddToCubeArray(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode cube, SWIGTYPE_p_int array) {
    return CuddJNI.Cudd_BddToCubeArray(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(cube), SWIGTYPE_p_int.getCPtr(array));
  }

  public static SWIGTYPE_p_DdGen Cudd_FirstNode(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_DdNode node) {
    long cPtr = CuddJNI.Cudd_FirstNode(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_DdNode.getCPtr(node));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdGen(cPtr, false);
  }

  public static int Cudd_NextNode(SWIGTYPE_p_DdGen gen, SWIGTYPE_p_p_DdNode node) {
    return CuddJNI.Cudd_NextNode(SWIGTYPE_p_DdGen.getCPtr(gen), SWIGTYPE_p_p_DdNode.getCPtr(node));
  }

  public static int Cudd_GenFree(SWIGTYPE_p_DdGen gen) {
    return CuddJNI.Cudd_GenFree(SWIGTYPE_p_DdGen.getCPtr(gen));
  }

  public static int Cudd_IsGenEmpty(SWIGTYPE_p_DdGen gen) {
    return CuddJNI.Cudd_IsGenEmpty(SWIGTYPE_p_DdGen.getCPtr(gen));
  }

  public static SWIGTYPE_p_DdNode Cudd_IndicesToCube(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_int array, int n) {
    long cPtr = CuddJNI.Cudd_IndicesToCube__SWIG_1(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_int.getCPtr(array), n);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static void Cudd_PrintVersion(SWIGTYPE_p_FILE fp) {
    CuddJNI.Cudd_PrintVersion(SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static double Cudd_AverageDistance(SWIGTYPE_p_DdManager dd) {
    return CuddJNI.Cudd_AverageDistance(SWIGTYPE_p_DdManager.getCPtr(dd));
  }

  public static int Cudd_Random() {
    return CuddJNI.Cudd_Random();
  }

  public static void Cudd_Srandom(int seed) {
    CuddJNI.Cudd_Srandom(seed);
  }

  public static double Cudd_Density(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, int nvars) {
    return CuddJNI.Cudd_Density(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), nvars);
  }

  public static void Cudd_OutOfMem(int size) {
    CuddJNI.Cudd_OutOfMem(size);
  }

  public static int Cudd_zddCount(SWIGTYPE_p_DdManager zdd, SWIGTYPE_p_DdNode P) {
    return CuddJNI.Cudd_zddCount(SWIGTYPE_p_DdManager.getCPtr(zdd), SWIGTYPE_p_DdNode.getCPtr(P));
  }

  public static double Cudd_zddCountDouble(SWIGTYPE_p_DdManager zdd, SWIGTYPE_p_DdNode P) {
    return CuddJNI.Cudd_zddCountDouble(SWIGTYPE_p_DdManager.getCPtr(zdd), SWIGTYPE_p_DdNode.getCPtr(P));
  }

  public static SWIGTYPE_p_DdNode Cudd_zddProduct(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_zddProduct(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddUnateProduct(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_zddUnateProduct(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddWeakDiv(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_zddWeakDiv(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddDivide(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_zddDivide(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddWeakDivF(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_zddWeakDivF(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddDivideF(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g) {
    long cPtr = CuddJNI.Cudd_zddDivideF(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddComplement(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode node) {
    long cPtr = CuddJNI.Cudd_zddComplement(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(node));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_MtrNode Cudd_MakeZddTreeNode(SWIGTYPE_p_DdManager dd, long low, long size, long type) {
    long cPtr = CuddJNI.Cudd_MakeZddTreeNode(SWIGTYPE_p_DdManager.getCPtr(dd), low, size, type);
    return (cPtr == 0) ? null : new SWIGTYPE_p_MtrNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddIsop(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode L, SWIGTYPE_p_DdNode U, SWIGTYPE_p_p_DdNode zdd_I) {
    long cPtr = CuddJNI.Cudd_zddIsop(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(L), SWIGTYPE_p_DdNode.getCPtr(U), SWIGTYPE_p_p_DdNode.getCPtr(zdd_I));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_bddIsop(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode L, SWIGTYPE_p_DdNode U) {
    long cPtr = CuddJNI.Cudd_bddIsop(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(L), SWIGTYPE_p_DdNode.getCPtr(U));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_MakeBddFromZddCover(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode node) {
    long cPtr = CuddJNI.Cudd_MakeBddFromZddCover(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(node));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_zddDagSize(SWIGTYPE_p_DdNode p_node) {
    return CuddJNI.Cudd_zddDagSize(SWIGTYPE_p_DdNode.getCPtr(p_node));
  }

  public static double Cudd_zddCountMinterm(SWIGTYPE_p_DdManager zdd, SWIGTYPE_p_DdNode node, int path) {
    return CuddJNI.Cudd_zddCountMinterm(SWIGTYPE_p_DdManager.getCPtr(zdd), SWIGTYPE_p_DdNode.getCPtr(node), path);
  }

  public static void Cudd_zddPrintSubtable(SWIGTYPE_p_DdManager table) {
    CuddJNI.Cudd_zddPrintSubtable(SWIGTYPE_p_DdManager.getCPtr(table));
  }

  public static SWIGTYPE_p_DdNode Cudd_zddPortFromBdd(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode B) {
    long cPtr = CuddJNI.Cudd_zddPortFromBdd(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(B));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddPortToBdd(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f) {
    long cPtr = CuddJNI.Cudd_zddPortToBdd(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static int Cudd_zddReduceHeap(SWIGTYPE_p_DdManager table, int heuristic, int minsize) {
    return CuddJNI.Cudd_zddReduceHeap(SWIGTYPE_p_DdManager.getCPtr(table), heuristic, minsize);
  }

  public static int Cudd_zddShuffleHeap(SWIGTYPE_p_DdManager table, SWIGTYPE_p_int permutation) {
    return CuddJNI.Cudd_zddShuffleHeap(SWIGTYPE_p_DdManager.getCPtr(table), SWIGTYPE_p_int.getCPtr(permutation));
  }

  public static SWIGTYPE_p_DdNode Cudd_zddIte(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_DdNode g, SWIGTYPE_p_DdNode h) {
    long cPtr = CuddJNI.Cudd_zddIte(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_DdNode.getCPtr(g), SWIGTYPE_p_DdNode.getCPtr(h));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddUnion(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode P, SWIGTYPE_p_DdNode Q) {
    long cPtr = CuddJNI.Cudd_zddUnion(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(P), SWIGTYPE_p_DdNode.getCPtr(Q));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddIntersect(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode P, SWIGTYPE_p_DdNode Q) {
    long cPtr = CuddJNI.Cudd_zddIntersect(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(P), SWIGTYPE_p_DdNode.getCPtr(Q));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddDiff(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode P, SWIGTYPE_p_DdNode Q) {
    long cPtr = CuddJNI.Cudd_zddDiff(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(P), SWIGTYPE_p_DdNode.getCPtr(Q));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddDiffConst(SWIGTYPE_p_DdManager zdd, SWIGTYPE_p_DdNode P, SWIGTYPE_p_DdNode Q) {
    long cPtr = CuddJNI.Cudd_zddDiffConst(SWIGTYPE_p_DdManager.getCPtr(zdd), SWIGTYPE_p_DdNode.getCPtr(P), SWIGTYPE_p_DdNode.getCPtr(Q));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddSubset1(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode P, int var) {
    long cPtr = CuddJNI.Cudd_zddSubset1(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(P), var);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddSubset0(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode P, int var) {
    long cPtr = CuddJNI.Cudd_zddSubset0(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(P), var);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static SWIGTYPE_p_DdNode Cudd_zddChange(SWIGTYPE_p_DdManager dd, SWIGTYPE_p_DdNode P, int var) {
    long cPtr = CuddJNI.Cudd_zddChange(SWIGTYPE_p_DdManager.getCPtr(dd), SWIGTYPE_p_DdNode.getCPtr(P), var);
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdNode(cPtr, false);
  }

  public static void Cudd_zddSymmProfile(SWIGTYPE_p_DdManager table, int lower, int upper) {
    CuddJNI.Cudd_zddSymmProfile(SWIGTYPE_p_DdManager.getCPtr(table), lower, upper);
  }

  public static int Cudd_zddPrintMinterm(SWIGTYPE_p_DdManager zdd, SWIGTYPE_p_DdNode node) {
    return CuddJNI.Cudd_zddPrintMinterm(SWIGTYPE_p_DdManager.getCPtr(zdd), SWIGTYPE_p_DdNode.getCPtr(node));
  }

  public static int Cudd_zddPrintCover(SWIGTYPE_p_DdManager zdd, SWIGTYPE_p_DdNode node) {
    return CuddJNI.Cudd_zddPrintCover(SWIGTYPE_p_DdManager.getCPtr(zdd), SWIGTYPE_p_DdNode.getCPtr(node));
  }

  public static int Cudd_zddPrintDebug(SWIGTYPE_p_DdManager zdd, SWIGTYPE_p_DdNode f, int n, int pr) {
    return CuddJNI.Cudd_zddPrintDebug(SWIGTYPE_p_DdManager.getCPtr(zdd), SWIGTYPE_p_DdNode.getCPtr(f), n, pr);
  }

  public static SWIGTYPE_p_DdGen Cudd_zddFirstPath(SWIGTYPE_p_DdManager zdd, SWIGTYPE_p_DdNode f, SWIGTYPE_p_p_int path) {
    long cPtr = CuddJNI.Cudd_zddFirstPath(SWIGTYPE_p_DdManager.getCPtr(zdd), SWIGTYPE_p_DdNode.getCPtr(f), SWIGTYPE_p_p_int.getCPtr(path));
    return (cPtr == 0) ? null : new SWIGTYPE_p_DdGen(cPtr, false);
  }

  public static int Cudd_zddNextPath(SWIGTYPE_p_DdGen gen, SWIGTYPE_p_p_int path) {
    return CuddJNI.Cudd_zddNextPath(SWIGTYPE_p_DdGen.getCPtr(gen), SWIGTYPE_p_p_int.getCPtr(path));
  }

  public static String Cudd_zddCoverPathToString(SWIGTYPE_p_DdManager zdd, SWIGTYPE_p_int path, String str) {
    return CuddJNI.Cudd_zddCoverPathToString(SWIGTYPE_p_DdManager.getCPtr(zdd), SWIGTYPE_p_int.getCPtr(path), str);
  }

  public static int Cudd_zddDumpDot(SWIGTYPE_p_DdManager dd, int n, SWIGTYPE_p_p_DdNode f, SWIGTYPE_p_p_char inames, SWIGTYPE_p_p_char onames, SWIGTYPE_p_FILE fp) {
    return CuddJNI.Cudd_zddDumpDot(SWIGTYPE_p_DdManager.getCPtr(dd), n, SWIGTYPE_p_p_DdNode.getCPtr(f), SWIGTYPE_p_p_char.getCPtr(inames), SWIGTYPE_p_p_char.getCPtr(onames), SWIGTYPE_p_FILE.getCPtr(fp));
  }

  public static int Cudd_bddSetPiVar(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddSetPiVar(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddSetPsVar(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddSetPsVar(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddSetNsVar(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddSetNsVar(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddIsPiVar(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddIsPiVar(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddIsPsVar(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddIsPsVar(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddIsNsVar(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddIsNsVar(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddSetPairIndex(SWIGTYPE_p_DdManager dd, int index, int pairIndex) {
    return CuddJNI.Cudd_bddSetPairIndex(SWIGTYPE_p_DdManager.getCPtr(dd), index, pairIndex);
  }

  public static int Cudd_bddReadPairIndex(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddReadPairIndex(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddSetVarToBeGrouped(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddSetVarToBeGrouped(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddSetVarHardGroup(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddSetVarHardGroup(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddResetVarToBeGrouped(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddResetVarToBeGrouped(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddIsVarToBeGrouped(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddIsVarToBeGrouped(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddSetVarToBeUngrouped(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddSetVarToBeUngrouped(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddIsVarToBeUngrouped(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddIsVarToBeUngrouped(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  public static int Cudd_bddIsVarHardGroup(SWIGTYPE_p_DdManager dd, int index) {
    return CuddJNI.Cudd_bddIsVarHardGroup(SWIGTYPE_p_DdManager.getCPtr(dd), index);
  }

  // enums and constants
  public final static String CUDD_VERSION = CuddJNI.get_CUDD_VERSION();
  public final static int SIZEOF_VOID_P = CuddJNI.get_SIZEOF_VOID_P();
  public final static int SIZEOF_INT = CuddJNI.get_SIZEOF_INT();
  public final static int SIZEOF_LONG = CuddJNI.get_SIZEOF_LONG();
  public final static int TRUE = CuddJNI.get_TRUE();
  public final static int FALSE = CuddJNI.get_FALSE();
  public final static int CUDD_OUT_OF_MEM = CuddJNI.get_CUDD_OUT_OF_MEM();
  public final static int CUDD_UNIQUE_SLOTS = CuddJNI.get_CUDD_UNIQUE_SLOTS();
  public final static int CUDD_CACHE_SLOTS = CuddJNI.get_CUDD_CACHE_SLOTS();
  public final static int CUDD_RESIDUE_DEFAULT = CuddJNI.get_CUDD_RESIDUE_DEFAULT();
  public final static int CUDD_RESIDUE_MSB = CuddJNI.get_CUDD_RESIDUE_MSB();
  public final static int CUDD_RESIDUE_TC = CuddJNI.get_CUDD_RESIDUE_TC();
  public final static int DD_APA_BITS = CuddJNI.get_DD_APA_BITS();
  public final static int DD_APA_BASE = CuddJNI.get_DD_APA_BASE();
  public final static int DD_APA_MASK = CuddJNI.get_DD_APA_MASK();
  public final static String DD_APA_HEXPRINT = CuddJNI.get_DD_APA_HEXPRINT();
  public final static int CUDD_REORDER_SAME = CuddJNI.get_CUDD_REORDER_SAME();
  public final static int CUDD_REORDER_NONE = CuddJNI.get_CUDD_REORDER_NONE();
  public final static int CUDD_REORDER_RANDOM = CuddJNI.get_CUDD_REORDER_RANDOM();
  public final static int CUDD_REORDER_RANDOM_PIVOT = CuddJNI.get_CUDD_REORDER_RANDOM_PIVOT();
  public final static int CUDD_REORDER_SIFT = CuddJNI.get_CUDD_REORDER_SIFT();
  public final static int CUDD_REORDER_SIFT_CONVERGE = CuddJNI.get_CUDD_REORDER_SIFT_CONVERGE();
  public final static int CUDD_REORDER_SYMM_SIFT = CuddJNI.get_CUDD_REORDER_SYMM_SIFT();
  public final static int CUDD_REORDER_SYMM_SIFT_CONV = CuddJNI.get_CUDD_REORDER_SYMM_SIFT_CONV();
  public final static int CUDD_REORDER_WINDOW2 = CuddJNI.get_CUDD_REORDER_WINDOW2();
  public final static int CUDD_REORDER_WINDOW3 = CuddJNI.get_CUDD_REORDER_WINDOW3();
  public final static int CUDD_REORDER_WINDOW4 = CuddJNI.get_CUDD_REORDER_WINDOW4();
  public final static int CUDD_REORDER_WINDOW2_CONV = CuddJNI.get_CUDD_REORDER_WINDOW2_CONV();
  public final static int CUDD_REORDER_WINDOW3_CONV = CuddJNI.get_CUDD_REORDER_WINDOW3_CONV();
  public final static int CUDD_REORDER_WINDOW4_CONV = CuddJNI.get_CUDD_REORDER_WINDOW4_CONV();
  public final static int CUDD_REORDER_GROUP_SIFT = CuddJNI.get_CUDD_REORDER_GROUP_SIFT();
  public final static int CUDD_REORDER_GROUP_SIFT_CONV = CuddJNI.get_CUDD_REORDER_GROUP_SIFT_CONV();
  public final static int CUDD_REORDER_ANNEALING = CuddJNI.get_CUDD_REORDER_ANNEALING();
  public final static int CUDD_REORDER_GENETIC = CuddJNI.get_CUDD_REORDER_GENETIC();
  public final static int CUDD_REORDER_LINEAR = CuddJNI.get_CUDD_REORDER_LINEAR();
  public final static int CUDD_REORDER_LINEAR_CONVERGE = CuddJNI.get_CUDD_REORDER_LINEAR_CONVERGE();
  public final static int CUDD_REORDER_LAZY_SIFT = CuddJNI.get_CUDD_REORDER_LAZY_SIFT();
  public final static int CUDD_REORDER_EXACT = CuddJNI.get_CUDD_REORDER_EXACT();
  public final static int CUDD_NO_CHECK = CuddJNI.get_CUDD_NO_CHECK();
  public final static int CUDD_GROUP_CHECK = CuddJNI.get_CUDD_GROUP_CHECK();
  public final static int CUDD_GROUP_CHECK2 = CuddJNI.get_CUDD_GROUP_CHECK2();
  public final static int CUDD_GROUP_CHECK3 = CuddJNI.get_CUDD_GROUP_CHECK3();
  public final static int CUDD_GROUP_CHECK4 = CuddJNI.get_CUDD_GROUP_CHECK4();
  public final static int CUDD_GROUP_CHECK5 = CuddJNI.get_CUDD_GROUP_CHECK5();
  public final static int CUDD_GROUP_CHECK6 = CuddJNI.get_CUDD_GROUP_CHECK6();
  public final static int CUDD_GROUP_CHECK7 = CuddJNI.get_CUDD_GROUP_CHECK7();
  public final static int CUDD_GROUP_CHECK8 = CuddJNI.get_CUDD_GROUP_CHECK8();
  public final static int CUDD_GROUP_CHECK9 = CuddJNI.get_CUDD_GROUP_CHECK9();
  public final static int CUDD_PRE_GC_HOOK = CuddJNI.get_CUDD_PRE_GC_HOOK();
  public final static int CUDD_POST_GC_HOOK = CuddJNI.get_CUDD_POST_GC_HOOK();
  public final static int CUDD_PRE_REORDERING_HOOK = CuddJNI.get_CUDD_PRE_REORDERING_HOOK();
  public final static int CUDD_POST_REORDERING_HOOK = CuddJNI.get_CUDD_POST_REORDERING_HOOK();
  public final static int CUDD_NO_ERROR = CuddJNI.get_CUDD_NO_ERROR();
  public final static int CUDD_MEMORY_OUT = CuddJNI.get_CUDD_MEMORY_OUT();
  public final static int CUDD_TOO_MANY_NODES = CuddJNI.get_CUDD_TOO_MANY_NODES();
  public final static int CUDD_MAX_MEM_EXCEEDED = CuddJNI.get_CUDD_MAX_MEM_EXCEEDED();
  public final static int CUDD_INVALID_ARG = CuddJNI.get_CUDD_INVALID_ARG();
  public final static int CUDD_INTERNAL_ERROR = CuddJNI.get_CUDD_INTERNAL_ERROR();
  public final static int CUDD_LAZY_NONE = CuddJNI.get_CUDD_LAZY_NONE();
  public final static int CUDD_LAZY_SOFT_GROUP = CuddJNI.get_CUDD_LAZY_SOFT_GROUP();
  public final static int CUDD_LAZY_HARD_GROUP = CuddJNI.get_CUDD_LAZY_HARD_GROUP();
  public final static int CUDD_LAZY_UNGROUP = CuddJNI.get_CUDD_LAZY_UNGROUP();
  public final static int CUDD_VAR_PRIMARY_INPUT = CuddJNI.get_CUDD_VAR_PRIMARY_INPUT();
  public final static int CUDD_VAR_PRESENT_STATE = CuddJNI.get_CUDD_VAR_PRESENT_STATE();
  public final static int CUDD_VAR_NEXT_STATE = CuddJNI.get_CUDD_VAR_NEXT_STATE();
}
